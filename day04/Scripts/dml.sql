UPDATE TBL_PRODUCT
SET PRODUCT_STOCK = 100
WHERE ID = 2;

SELECT * FROM TBL_PRODUCT;

DELETE FROM TBL_PRODUCT
WHERE ID = 5;

-- 정렬(항상 마지막에 실시한다)
-- ORDER BY
-- ORDER BY 컬럼명 ASC : 오름차순
-- ORDER BY 컬럼명 DESC : 내림차순

SELECT *
FROM TBL_PRODUCT
WHERE PRODUCT_NAME = '배승원의 그램'
ORDER BY ID ASC;

-- 자바에서 처리해줄 필요 없이 스크립트 언어에서 처리 후 넘겨준다.

-- 서브 쿼리 (SUB QUERY)
-- WHERE에서 쓰기
-- WHERE: SUB QUERY
-- SELECT: SCALAR
-- FROM: IN LINE VIEW
SELECT *
FROM TBL_PRODUCT
WHERE PRODUCT_PRICE < (
	SELECT AVG(PRODUCT_PRICE)
	FROM TBL_PRODUCT
);

-- 평균 재고보다 큰 상품을 조회
-- WHERE 에서 쓰기
SELECT *
FROM TBL_PRODUCT
WHERE PRODUCT_STOCK > (
	SELECT AVG(PRODUCT_STOCK)
	FROM TBL_PRODUCT
)
ORDER BY ID DESC;

-- FROM에서 쓰기
SELECT AVG(PRODUCT_PRICE)
FROM (
	SELECT *
	FROM TBL_PRODUCT
	WHERE PRODUCT_STOCK = 20
);

SELECT TPR.PRODUCT_NAME, (
	SELECT AVG(PRODUCT_PRICE)
	FROM(
		SELECT *
		FROM TBL_PRODUCT
		WHERE PRODUCT_STOCK = 20
	)
)
FROM TBL_PRODUCT TPR;


-- 사용자가 게시판에 글을 작성

CREATE SEQUENCE SEQ_USER;
CREATE TABLE TBL_USER(
	ID NUMBER CONSTRAINT PK_USER PRIMARY KEY,
	USER_EMAIL VARCHAR2(255) NOT NULL UNIQUE,
	USER_PASSWORD VARCHAR(255) NOT NULL,
	USER_ADDRESS VARCHAR2(255),
	USER_BIRTH DATE
);

CREATE SEQUENCE SEQ_POST;
CREATE TABLE TBL_POST(
	ID NUMBER CONSTRAINT PK_POST PRIMARY KEY,
	POST_TITLE VARCHAR2(255) NOT NULL,
	POST_CONTENT VARCHAR2(255) NOT NULL,
	USER_ID NUMBER,
	CONSTRAINT FK_POST_USER FOREIGN KEY(USER_ID)
	REFERENCES TBL_USER(ID)
);

CREATE SEQUENCE SEQ_REPLY;
CREATE TABLE TBL_REPLY(
	ID NUMBER CONSTRAINT PK_WRITE PRIMARY KEY,
	REPLY_CONTEXT VARCHAR2(255),
	USER_ID NUMBER,
	POST_ID NUMBER,
	CONSTRAINT FK_REPLY_USER FOREIGN KEY(USER_ID)
	REFERENCES TBL_USER(ID),
	CONSTRAINT FK_REPLY_POST FOREIGN KEY(POST_ID)
	REFERENCES TBL_POST(ID)
);

INSERT INTO TBL_USER
VALUES(SEQ_USER.NEXTvAL, 'hgd1234@gmail.com', '1234', '서울시 강남구', '2002-07-15');

INSERT INTO TBL_USER
VALUES(SEQ_USER.NEXTvAL, 'jbg1234@gmail.com', '1234', '경기도 성남시', '1995-01-23');

INSERT INTO TBL_USER
VALUES(SEQ_USER.NEXTvAL, 'lss1234@gmail.com', '1234', '수원시 팔달구', '1998-03-01');

INSERT INTO TBL_USER
VALUES(SEQ_USER.NEXTvAL, 'kyh1234@gmail.com', '1234', '서울시 마포구', '2002-07-15');

INSERT INTO TBL_USER
VALUES(SEQ_USER.NEXTvAL, 'kcs1234@gmail.com', '1234', '서울시 동작구', '1992-03-30');

INSERT INTO TBL_USER
VALUES(SEQ_USER.NEXTvAL, 'cjs1234@gmail.com', '1234', '경기도 화성시 ', '2002-02-18');

INSERT INTO TBL_POST
VALUES(SEQ_POST.NEXTVAL, '이승찬 맥북 갔다버려!', '컴퓨터는 역시 그램', 1);

INSERT INTO TBL_POST
VALUES(SEQ_POST.NEXTVAL, '배승원 카드게임 좀 그만해', '알탭 천재 배승원', 2);

INSERT INTO TBL_POST
VALUES(SEQ_POST.NEXTVAL, '마우스 뭐가 좋아요?', '마우슥 고장났는데, 새로 사고 싶어요', 3);

INSERT INTO TBL_POST
VALUES(SEQ_POST.NEXTVAL, '100만원으로 살 수 있는 컴퓨터 추천 좀..', '기존의 컴퓨터 고장났어요', 5);

INSERT INTO TBL_POST
VALUES(SEQ_POST.NEXTVAL, '아직 다 못 썻어요.', '제가 안 썻어요', 2);

INSERT INTO TBL_POST
VALUES(SEQ_POST.NEXTVAL, '레전드 네버다이', '나는야 페이커', 1);

INSERT INTO TBL_REPLY
VALUES(SEQ_REPLY.NEXTVAL, '한민이형 화이팅', 6, 1);
INSERT INTO TBL_REPLY
VALUES(SEQ_REPLY.NEXTVAL, '한민이형 넌 별것도 아니야', 6, 3);
INSERT INTO TBL_REPLY
VALUES(SEQ_REPLY.NEXTVAL, '한민이형 밥 좀 사줘요', 6, 4);
INSERT INTO TBL_REPLY
VALUES(SEQ_REPLY.NEXTVAL, '한민이형은 나의 도구', 6, 5);
INSERT INTO TBL_REPLY
VALUES(SEQ_REPLY.NEXTVAL, '그램보단 콩순이', 2, 1);
INSERT INTO TBL_REPLY
VALUES(SEQ_REPLY.NEXTVAL, '마우스는 세일할 때 사세요', 1, 4);
INSERT INTO TBL_REPLY
VALUES(SEQ_REPLY.NEXTVAL, '갤럭시 북 세일할 때 사세요~', 3, 2);
INSERT INTO TBL_REPLY
VALUES(SEQ_REPLY.NEXTVAL, '와 진짜 저건 저항받겠다. 인성 ㄷㄷ', 4, 4);
INSERT INTO TBL_REPLY
VALUES(SEQ_REPLY.NEXTVAL, '한민이형 질문 좀 해도 될까요?', 6, 1);

SELECT * FROM TBL_USER;
SELECT * FROM TBL_POST;
SELECT * FROM TBL_REPLY;


-- 6번 사용자가 댓글을 단 게시글의 목록
SELECT *
FROM TBL_POST
WHERE ID IN (
	SELECT POST_ID
	FROM TBL_REPLY
	WHERE USER_ID = 6
);

-- 댓글을 단 사용자의 ID와 ADDRESS

SELECT ID AS "사용자 ID", USER_ADDRESS AS "사용자 주소"
FROM TBL_USER
WHERE ID IN (
	SELECT USER_ID
	FROM TBL_REPLY
	GROUP BY USER_ID
);


-- 댓글을 가장 많이 단 사용자
SELECT *
FROM TBL_USER
WHERE ID = (
	SELECT USER_ID
	FROM TBL_REPLY
	GROUP BY USER_ID
	HAVING COUNT(USER_ID) = (	
		SELECT MAX(COUNT(USER_ID))
		FROM TBL_REPLY
		GROUP BY USER_ID
	)
);


-- 댓글이 가장 많이 달린 인기 게시글 조회
SELECT *
FROM TBL_POST
WHERE ID = (
	SELECT POST_ID
	FROM TBL_REPLY
	GROUP BY POST_ID
	HAVING COUNT(POST_ID) = (
		SELECT MAX(COUNT(POST_ID))
		FROM TBL_REPLY
		GROUP BY POST_ID	
	)	
);

SELECT *
FROM TBL_USER
WHERE ID IN (
	SELECT USER_ID
	FROM TBL_REPLY
) 
AND ID IN 
(
	SELECT USER_ID
	FROM TBL_POST
);

SELECT *
FROM TBL_REPLY
WHERE POST_ID = (
	SELECT ID
	FROM TBL_POST
	WHERE POST_TITLE LIKE '%맥북%'
);

SELECT USER_EMAIL
FROM TBL_USER
WHERE ID IN (
	SELECT USER_ID
	FROM TBL_POST
	WHERE POST_CONTENT LIKE '%컴퓨터%'
);

SELECT *
FROM TBL_USER
WHERE ID IN (
	SELECT USER_ID
	FROM TBL_REPLY 
	WHERE POST_ID IN (
		SELECT ID
		FROM TBL_POST
		WHERE POST_CONTENT LIKE '%고장%'
	)
);

SELECT *
FROM TBL_USER
WHERE ID IN (
	SELECT USER_ID
	FROM TBL_REPLY
)
AND USER_ADDRESS LIKE '%경기도%';

SELECT *
FROM TBL_POST
WHERE USER_ID IN (
	SELECT ID
	FROM (
		SELECT *
		FROM TBL_USER
		ORDER BY USER_BIRTH DESC
	)
	WHERE ROWNUM <= 3
);


SELECT *
FROM TBL_POST
WHERE ID = (
	SELECT COUNT(ID)
	FROM TBL_USER
	WHERE USER_ADDRESS LIKE '%서울%'
);

SELECT *
FROM TBL_REPLY
WHERE POST_ID IN (
	SELECT ID
	FROM TBL_POST
	WHERE USER_ID IN (
		SELECT ID
		FROM TBL_USER
		WHERE USER_ADDRESS LIKE '%구'
	)	
);

SELECT *
FROM TBL_REPLY 
WHERE POST_ID IN (
	SELECT ID
	FROM TBL_POST
	WHERE ID IN (
		SELECT POST_ID
		FROM TBL_REPLY
		WHERE REPLY_CONTEXT LIKE '%한민%'
	)
);

SELECT *
FROM TBL_USER
WHERE ID = (
	SELECT USER_ID
	FROM TBL_POST
	WHERE USER_ID IN (
				
	)
)

SELECT *
FROM TBL_POST
WHERE ID IN (
	SELECT POST_ID
	FROM TBL_REPLY
	GROUP BY POST_ID
	HAVING COUNT(ID) > (
		SELECT AVG(COUNT(ID))
		FROM TBL_REPLY
		GROUP BY POST_ID
	)
);


SELECT *
FROM TBL_POST
WHERE USER_ID = (
	SELECT USER_ID
	FROM (
		SELECT USER_ID, COUNT(ID) AS "COUNT_ID"
		FROM TBL_REPLY
		GROUP BY USER_ID
		ORDER BY COUNT(ID), USER_ID
	)
	WHERE ROWNUM = 1
);






